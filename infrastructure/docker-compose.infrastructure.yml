version: '3.8'

services:
  # PostgreSQL Database - shared by both architectures
  postgres:
    image: postgres:15
    container_name: library_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - library_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d library"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache - shared by both architectures  
  # redis:
  #   image: redis:alpine
  #   container_name: library_redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - library_network
  #   command: redis-server --appendonly yes
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 10s
  #     timeout: 3s
  #     retries: 5

  # Optional: pgAdmin for database inspection
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: library_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    networks:
      - library_network
    depends_on:
      - postgres

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  library_network:
    driver: bridge
    name: library_network