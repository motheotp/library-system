# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import book_pb2 as book__pb2

GRPC_GENERATED_VERSION = '1.75.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in book_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class BookServiceStub(object):
    """Book service definition
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddBook = channel.unary_unary(
                '/book.BookService/AddBook',
                request_serializer=book__pb2.AddBookRequest.SerializeToString,
                response_deserializer=book__pb2.AddBookResponse.FromString,
                _registered_method=True)
        self.GetBook = channel.unary_unary(
                '/book.BookService/GetBook',
                request_serializer=book__pb2.GetBookRequest.SerializeToString,
                response_deserializer=book__pb2.GetBookResponse.FromString,
                _registered_method=True)
        self.ListBooks = channel.unary_unary(
                '/book.BookService/ListBooks',
                request_serializer=book__pb2.ListBooksRequest.SerializeToString,
                response_deserializer=book__pb2.ListBooksResponse.FromString,
                _registered_method=True)
        self.UpdateBookStatus = channel.unary_unary(
                '/book.BookService/UpdateBookStatus',
                request_serializer=book__pb2.UpdateBookStatusRequest.SerializeToString,
                response_deserializer=book__pb2.UpdateBookStatusResponse.FromString,
                _registered_method=True)
        self.UpdateAvailableCopies = channel.unary_unary(
                '/book.BookService/UpdateAvailableCopies',
                request_serializer=book__pb2.UpdateAvailableCopiesRequest.SerializeToString,
                response_deserializer=book__pb2.UpdateAvailableCopiesResponse.FromString,
                _registered_method=True)


class BookServiceServicer(object):
    """Book service definition
    """

    def AddBook(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBook(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListBooks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBookStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAvailableCopies(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BookServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddBook': grpc.unary_unary_rpc_method_handler(
                    servicer.AddBook,
                    request_deserializer=book__pb2.AddBookRequest.FromString,
                    response_serializer=book__pb2.AddBookResponse.SerializeToString,
            ),
            'GetBook': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBook,
                    request_deserializer=book__pb2.GetBookRequest.FromString,
                    response_serializer=book__pb2.GetBookResponse.SerializeToString,
            ),
            'ListBooks': grpc.unary_unary_rpc_method_handler(
                    servicer.ListBooks,
                    request_deserializer=book__pb2.ListBooksRequest.FromString,
                    response_serializer=book__pb2.ListBooksResponse.SerializeToString,
            ),
            'UpdateBookStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBookStatus,
                    request_deserializer=book__pb2.UpdateBookStatusRequest.FromString,
                    response_serializer=book__pb2.UpdateBookStatusResponse.SerializeToString,
            ),
            'UpdateAvailableCopies': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAvailableCopies,
                    request_deserializer=book__pb2.UpdateAvailableCopiesRequest.FromString,
                    response_serializer=book__pb2.UpdateAvailableCopiesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'book.BookService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('book.BookService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class BookService(object):
    """Book service definition
    """

    @staticmethod
    def AddBook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/book.BookService/AddBook',
            book__pb2.AddBookRequest.SerializeToString,
            book__pb2.AddBookResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetBook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/book.BookService/GetBook',
            book__pb2.GetBookRequest.SerializeToString,
            book__pb2.GetBookResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListBooks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/book.BookService/ListBooks',
            book__pb2.ListBooksRequest.SerializeToString,
            book__pb2.ListBooksResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateBookStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/book.BookService/UpdateBookStatus',
            book__pb2.UpdateBookStatusRequest.SerializeToString,
            book__pb2.UpdateBookStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateAvailableCopies(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/book.BookService/UpdateAvailableCopies',
            book__pb2.UpdateAvailableCopiesRequest.SerializeToString,
            book__pb2.UpdateAvailableCopiesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
